plugins {
    id "com.gradleup.shadow"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowBundle(project(path: ":common", configuration: "transformProductionFabric"))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand version: inputs.properties.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = "fabric-dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
    archiveClassifier = "fabric"
}

jar {
    archiveClassifier = "fabric-dev"
}
